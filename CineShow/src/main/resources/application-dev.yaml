spring:
  config:
    activate:
      on-profile: dev

  #config oAuth 2.0
  security:
    oauth2:
      client:
        registration:
          google-user:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/google-user"
            provider: google
            scope:
              - openid
              - profile
              - email
          google-admin:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/google-admin"
            provider: google
            scope:
              - openid
              - profile
              - email
        provider:
          google:
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-name-attribute: sub

  devtools:
    add-properties: true

  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:CineShow}?useUnicode=true&characterEncoding=UTF-8&createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    username: ${DB_USER:root}
    password: ${DB_PASS:}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect


  #  datasource:
  #    url: jdbc:sqlserver://${DB_HOST:}:${DB_PORT:1433};databaseName=${DB_NAME:CineShow};encrypt=true;trustServerCertificate=true
  #    username: ${DB_USER:}
  #    password: ${DB_PASS:}
  #    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
  #
  #  jpa:
  #    database-platform: org.hibernate.dialect.SQLServerDialect
  #    hibernate:
  #      ddl-auto: update
  #    show-sql: true
  #    properties:
  #      hibernate:
  #        format_sql: true
  #        dialect: org.hibernate.dialect.SQLServerDialect
  sendgrid:
    api-key: ${SENDGRID_API_KEY}
    from-email: "manhphongg6572@gmail.com"


admin: { email_default: "admin@test.com", password_default: "12345678" }
user-account-test: { email: "user@test.com", password: "12345678" }

jwt:
  secret-key-access-token: "8mhZcWZVPhDeucdGaUQhUQoSkda34jAtkBPJNP54dvQ"
  secret-key-refresh-token: "Gu4jjMNk9oBnertRHqfRZJdHnz5jihbbnjAHeWNQbpg"
  expiration-access-token: 15000 #3600000  #1000 * 60 * 60 time exist
  expiration-refresh-token: 2592000000     #1000 * 60 * 60 * 24 *30

